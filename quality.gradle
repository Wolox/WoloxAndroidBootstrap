apply plugin: 'findbugs'
apply plugin: 'checkstyle'

configurations {
    ktlint
}

buildscript {
    ext.ktlint_version = '0.27.0'
}

dependencies {
    ktlint "com.github.shyiko:ktlint:$ktlint_version"
}

findbugs {
    reportsDir = file("$project.buildDir/outputs/")
}

task findbugs(type: FindBugs) {
    description 'Run findbugs'
    group 'verification'

    classes = fileTree('build/intermediates/classes/production/')
    source = fileTree('src/main/java')
    classpath = files()
    effort = 'max'
    excludeFilter = file('quality/findbugs_exclude.xml')

    reportLevel = 'medium'
    reports {
        xml.enabled = false
        html.enabled = true
    }

    ignoreFailures = false
}

task checkstyle(type: Checkstyle) {
    description 'Run checkstyle'
    group 'verification'

    showViolations = true
    configFile file('quality/checkstyle/checkstyle.xml')
    // Expose ${configDir} in Checkstyle files
    configProperties = ['configDir': file('quality/checkstyle')]
    // empty classpath
    classpath = files()

    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/R.java'
    exclude '**/BuildConfig.java'

    ignoreFailures = false
}

task ktlint(type: JavaExec, group: 'verification') {
    description = 'Check Kotlin code style'
    main = 'com.github.shyiko.ktlint.Main'
    classpath = configurations.ktlint
    args 'src/**/*.kt'
}

task ktlintFormat(type: JavaExec, group: 'formatting') {
    description = 'Fix Kotlin code style deviations'
    main = 'com.github.shyiko.ktlint.Main'
    classpath = configurations.ktlint
    args '-F', 'src/**/*.kt'
}

preBuild.dependsOn 'checkstyle'

check.dependsOn 'checkstyle', 'findbugs', 'ktlint'