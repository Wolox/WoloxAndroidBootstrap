apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'idea'
apply plugin: 'com.hiya.jacoco-android'
apply from: 'keystore.gradle'
apply from: '../quality.gradle'
apply from: '../scripts/warp/warp_task.gradle'
apply from: '../scripts/sanity/sanity_task.gradle'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "ar.com.wolox.android.example"
        minSdkVersion 19
        targetSdkVersion 31
        multiDexEnabled true
        versionCode 1
        versionName "1.0.0"

        setProperty("archivesBaseName", "WoloxApp-$versionName") // Generated APK file name
    }

    signingConfigs {
        debug {
            storeFile file('keystore/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile release_keystore
            storePassword store_password
            keyAlias key_alias
            keyPassword key_password
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.debug
            testCoverageEnabled = true
        }
    }

    // Change the "default" to whatever fits. At least one 'dimension' is required by gradle.
    flavorDimensions "default"

    productFlavors {
        stage {
            applicationId defaultConfig.applicationId + ".stage"
            versionName defaultConfig.versionName + "-stage"
            resValue "string", "app_name", "[Stage] WoloxApp"
        }

        production {
            resValue "string", "app_name", "WoloxApp"
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        dataBinding true
    }
}

jacocoAndroidUnitTestReport {
    excludes = defaultExcludes + ['**/*_Factory.class']
}

buildscript {
    ext.android_core_ktx_version = '1.6.0'
    ext.android_fragment_ktx_version = '1.3.6'
    ext.androidx_recycler_version = '1.2.1'
    ext.androidx_material_version = '1.5.0-alpha05'
    ext.constraint_version = '2.1.1'
    ext.dagger_version = '2.38.1'
    ext.wolmo_core_version = '4.1.1'
    ext.wolmo_networking_version = '4.0.1'
    ext.leak_canary_version = '2.7'
    ext.chuck_version = '1.1.0'
    ext.okhhtp_login_interceptor_version = '4.9.0'
    ext.junit_version = '4.13.2'
    ext.assertj_version = '3.12.2'
    ext.mockito_kotlin_version = "3.2.0"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Wolmo
    implementation("com.github.Wolox:wolmo-core-android:$wolmo_core_version") {
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-coroutines-debug'
    }
    implementation("com.github.Wolox:wolmo-networking-android:$wolmo_networking_version") {
        exclude group: 'org.jetbrains.kotlinx', module: 'kotlinx-coroutines-debug'
    }

    // Android KTX
    implementation "androidx.core:core-ktx:$android_core_ktx_version"
    implementation "androidx.fragment:fragment-ktx:$android_fragment_ktx_version"

    // Android libraries
    implementation "androidx.recyclerview:recyclerview:$androidx_recycler_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"
    implementation "com.google.android.material:material:$androidx_material_version"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Third-party
    implementation "com.squareup.okhttp3:logging-interceptor:$okhhtp_login_interceptor_version"
    debugImplementation "com.readystatesoftware.chuck:library:$chuck_version"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:$chuck_version"

    // Testing dependencies
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockito_kotlin_version"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"
}
